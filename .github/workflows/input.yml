name: Input
on:
  workflow_dispatch:
    inputs:
      mode:
        description: '下载模式'
        required: true
        default: 'magnet链接'
        type: choice
        options:
        - magnet链接
        - 种子链接
      torrent:
        description: 'torrent'
        required: false
        type: string
      Upload:
        description: '上传路径'
        required: true
        type: string
        default: Upload/Pixiv/image
      Upload_mode:
        description: '上传模式'
        required: true
        default: 'python'
        type: choice
        options:
        - rclone
        - python
    
jobs:
  main-to-gh-pages:
    runs-on: ubuntu-latest
        
    steps:                          
    - name: checkout main
      uses: actions/checkout@v2
      with:
        ref: main
        fetch-depth: full
               
    - name: Prepare
      run: |
        sudo apt update
        sudo apt install -y -qq aria2
    
    - name: Download by magnet
      if: inputs.mode == 'magnet链接'
      run: |
        echo "${{ inputs.torrent }}" > aria2.session
        bash tracker.sh
        aria2c --conf-path=aria2.conf
        
    - name: Download by url
      if: inputs.mode == '种子链接'
      run: |
        wget "${{ inputs.torrent }}"
        echo $(basename "${{ inputs.torrent }}") > aria2.session
        bash tracker.sh
        aria2c --conf-path=aria2.conf
    
    - name: Upload by python
      if: inputs.Upload_mode == 'python'
      run: |
        pip install pycryptodome
        python C.py --public "${{ secrets.PUBLIC }}" --private "${{ secrets.PRIVATE }}" --mode jiemi
        cd Upload
        python run.py -p ${{ inputs.Upload }}

    - name: Upload by rclone
      if: inputs.Upload_mode == 'rclone'
      run: |
        cd Upload
        python run.py -p ${{ inputs.Upload }}

    - name: Clean
      if: inputs.Upload_mode == 'python'
      run: |
        rm -rf image
        python C.py --public "${{ secrets.PUBLIC }}" --private "${{ secrets.PRIVATE }}" --mode jiami

    - name: Push
      run: |
        git init
        git config user.name Rcrwrate
        git config user.email 46920034+Rcrwrate@users.noreply.github.com
        git add Upload/setting.py
        git commit -m "Input update ${{ github.run_id }}"
        git checkout -- Upload/oa.json
        git filter-branch --force --index-filter 'if [ "$GIT_COMMIT" != "$(git rev-parse HEAD)" ]; then git rm --cached --ignore-unmatch Upload/setting.py; fi' --prune-empty --tag-name-filter cat -- --all
        git push origin --force --all

                